# Generated by Django 3.0.2 on 2020-05-07 16:58

import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_type', models.CharField(blank=True, choices=[(0, 'Stamp'), (1, 'Blank Cheque'), (2, 'Aadhaar Card'), (3, 'PAN Card'), (4, 'Driving License'), (5, 'Voter ID Card'), (6, 'Others')], help_text='List of Submitted Documents', max_length=5, null=True, verbose_name='Documents Submitted')),
            ],
        ),
        migrations.AddField(
            model_name='accounts',
            name='advance_amount',
            field=models.BigIntegerField(default=0, help_text='Advance Amount of Loan', null=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Advance Amount'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='guaranteer_addr1',
            field=models.TextField(help_text='Correspondence Address of Particular', null=True, verbose_name='Correspondence Address'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='guaranteer_addr2',
            field=models.TextField(blank=True, help_text='Permanent Address of Particular. Leave Empty if same as Correspondence Address.', null=True, verbose_name='Permanent Address'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='guaranteer_caste',
            field=models.CharField(blank=True, help_text="Guaranteer's Caste", max_length=128, null=True, verbose_name='Caste'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='guaranteer_father_husband_name',
            field=models.CharField(help_text="Guaranteer's Father/Husband Name", max_length=256, null=True, verbose_name='Father/Husband Name'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='guaranteer_home_contact',
            field=models.CharField(blank=True, help_text='Home Contact Number', max_length=20, null=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Home Contact'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='guaranteer_name',
            field=models.CharField(help_text='Account Guaranteer Name', max_length=256, null=True, verbose_name='Guaranteer Name'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='guaranteer_office_contact',
            field=models.CharField(help_text='Office Contact Number', max_length=20, null=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Office Contact'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='home_contact',
            field=models.CharField(blank=True, help_text='Home Contact Number', max_length=20, null=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Home Contact'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='image',
            field=models.ImageField(help_text='Photograph of Particular', null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])], verbose_name='Particular Picture'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='loan_amount',
            field=models.BigIntegerField(help_text='Amount of Loan', null=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Loan Amount'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='loan_duration',
            field=models.BigIntegerField(help_text='Period of Loan', null=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Loan Period'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='loan_duration_type',
            field=models.CharField(choices=[('days', 'Day (s)'), ('months', 'Month (s)'), ('years', 'Year (s)')], default='days', help_text='Loan Period Type', max_length=8, null=True, verbose_name='Loan Period Type'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='loan_rate',
            field=models.FloatField(help_text='Interest Rate of Loan', null=True, verbose_name='Interest Rate'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='loan_type',
            field=models.CharField(choices=[('DF', 'DF'), ('DS', 'DS'), ('MT', 'MT'), ('SS', 'SS'), ('ST', 'ST')], default='DF', help_text='Loan Account Type', max_length=4, null=True, verbose_name='Loan Type'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='office_contact',
            field=models.CharField(help_text='Office Contact Number', max_length=20, null=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Office Contact'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='particular_addr1',
            field=models.TextField(help_text='Correspondence Address of Particular', null=True, verbose_name='Correspondence Address'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='particular_addr2',
            field=models.TextField(blank=True, help_text='Permanent Address of Particular. Leave Empty if same as Correspondence Address.', null=True, verbose_name='Permanent Address'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='particular_caste',
            field=models.CharField(blank=True, help_text="Particular's Caste", max_length=128, null=True, verbose_name='Caste'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='particular_father_husband_name',
            field=models.CharField(help_text="Particular's Father/Husband Name", max_length=256, null=True, verbose_name='Father/Husband Name'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='particular_name',
            field=models.CharField(help_text='Account Particular Name', max_length=256, null=True, verbose_name='Particular Name'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='documents_submitted',
            field=models.ManyToManyField(help_text='List of Submitted Documents', to='app.Documents', verbose_name='Documents Submitted'),
        ),
    ]
